<?xml version="1.0"?>
<doc>
    <assembly>
        <name>mini-project-api</name>
    </assembly>
    <members>
        <member name="T:mini_project_api.Configurations.SwaggerConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:mini_project_api.Configurations.SwaggerConfig.RegisterSwaggerModule(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:mini_project_api.Configurations.SwaggerConfig.UseApplicationSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:mini_project_api.Controllers.RedisController">
            <summary>
            
            </summary>
        </member>
        <member name="M:mini_project_api.Controllers.RedisController.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache,mini_project_business.Services.WeatherServices.IWeatherService,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            
            </summary>
            <param name="distributedCache"></param>
            <param name="weatherService"></param>
            <param name="memoryCache"></param>
        </member>
        <member name="M:mini_project_api.Controllers.RedisController.Get">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:mini_project_api.Controllers.RedisController.GetWeatherWithCache(mini_project_business.ViewModels.Weathers.SearchWeatherModel)">
            <summary>
            
            </summary>
            <param name="searchWeatherModel"></param>
            <returns></returns>
        </member>
        <member name="T:mini_project_api.Controllers.UserController">
            <summary>
            
            </summary>
        </member>
        <member name="M:mini_project_api.Controllers.UserController.#ctor(mini_project_business.Services.UserServices.IUserService)">
            <summary>
            
            </summary>
            <param name="userService"></param>
        </member>
        <member name="M:mini_project_api.Controllers.UserController.Login(mini_project_business.ViewModels.Users.LoginModel)">
            <summary>
            [USER] Endpoint for user login.
            </summary>
            <param name="loginModel"></param>
            <returns>A user within status 200 or 204 status.</returns>
            <response code="200">Returns 200 status</response>
            <response code="204">Returns NoContent status</response>
        </member>
        <member name="T:mini_project_api.Controllers.WeatherController">
            <summary>
            
            </summary>
        </member>
        <member name="M:mini_project_api.Controllers.WeatherController.#ctor(mini_project_business.Services.WeatherServices.IWeatherService,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            
            </summary>
            <param name="weatherService"></param>
            <param name="memoryCache"></param>
        </member>
        <member name="M:mini_project_api.Controllers.WeatherController.GetAllWeather(mini_project_business.ViewModels.Weathers.SearchWeatherModel)">
            <summary>
            [USER] Endpoint for get all weather with condition
            </summary>
            <param name="searchWeatherModel"></param>
            <returns>List of weather</returns>
            <response code="200">Returns the list of weather</response>
            <response code="204">Returns if list of weather is empty</response>
            <response code="403">Return if token is access denied</response>
        </member>
        <member name="M:mini_project_api.Controllers.WeatherController.GetWeatherById(System.Int32)">
            <summary>
            [USER] Endpoint for get weather by ID
            </summary>
            <param name="id">An id of weather</param>
            <returns>Info of the weather</returns>
            <response code="200">Returns the weather</response>
            <response code="204">Returns if the weather is not exist</response>
            <response code="403">Return if token is access denied</response>
        </member>
        <member name="M:mini_project_api.Controllers.WeatherController.CreateWeather(mini_project_business.ViewModels.Weathers.CreateWeatherModel)">
            <summary>
            [ADMIN] Endpoint for create weather
            </summary>
            <param name="requestBody">An obj contains input info of a weather.</param>
            <returns>A weather within status 201 or error status.</returns>
            <response code="201">Returns the weather</response>
            <response code="403">Return if token is access denied</response>
        </member>
        <member name="M:mini_project_api.Controllers.WeatherController.UpdateWeatherAsync(System.Int32,mini_project_business.ViewModels.Weathers.UpdateWeatherModel)">
            <summary>
            [ADMIN] Endpoint for edit weather.
            </summary>
            <param name="id"></param>
            <param name="requestBody">An obj contains update info of a weather.</param>
            <returns>A weather within status 200 or error status.</returns>
            <response code="200">Returns weather after update</response>
            <response code="403">Return if token is access denied</response>
        </member>
        <member name="M:mini_project_api.Controllers.WeatherController.DeleteWeatherAsync(System.Int32)">
            <summary>
            [ADMIN] Endpoint for Admin Delete a weather.
            </summary>
            <param name="id">ID of weather</param>
            <returns>A weather within status 200 or 204 status.</returns>
            <response code="200">Returns 200 status</response>
            <response code="204">Returns NoContent status</response>
        </member>
    </members>
</doc>
